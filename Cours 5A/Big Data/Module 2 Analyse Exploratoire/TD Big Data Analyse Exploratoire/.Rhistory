q()
source("td2.R")
sum(dataP [1:13 ,2:5])*3
ls
q()
source("td3.R")
print(head(royau))
print(head(royau))
print(summary(royau))
pairs(royau[,c(8:12) ])
royau.x <- royau[c(8:12)]
royau.x
royau
print(head(royau))
colnames(royau)
royau
royau[,c(8:15)]
royau[,c(8:12)]
pairs(royau[,c(8:12)])
royau[c(8:12)]
summar(royau[c(8:12)])
summary(royau[c(8:12)])
summary(royau[,c(8:12)])
str(royau)
royau.X
royau.x
royau.x
royau.x[5,]
royau.x[1:5,]
?subset
data <- read.table(text="
A  B  C  D
1  3  NA 4
2  1  3  4
NA 3  3  5
4  2  NA NA
2  NA 4  3
1  1  1  2",header=T,sep="")
data
subset(data,is.na(C))
subset(data,!is.na(C))
subset(data,!is.na(colnames(data)))
data
?subset
subset(data,A>2)
col(data)
data
subset(data,A,B)
subset(data,select=A)
subset(data,c(1:2))
subset(data,data[c(1:2)])
subset(data,A>2)
subset(data,A>2|B>2)
subset(data,A>2&B>2)
subset(data,A>2&&B>2)
subset(data,A>2&&B>1)
subset(data,A>1&&B>1)
subset(data,A>0&&B>0)
subset(data,A>&B>0)
subset(data,A>0&B>0)
colnames(royau.x)
subset(data,select=colnames(data))
subset(data,colnames(data)>2)
subset(data,is.na(colnames(data)))
subset(data,!is.na(colnames(data)))
is.na(data)
subset(data,!is.na(data))
subset(data,is.na(data))
na.omit(royau.x)
royau.cr<-scale(royau.x)
royau.cr
str(royau.cr)
d.royau <- dist(royau.cr)
d.royau
source("td3.R"=
source("td3.R")
cah.ward
source("td3.R")
source("td3.R")
source("td3.R")
source("td3.R")
source("td3.R")
source("td3.R")
source("td3.R")
groupes.cah
groupes.cah[1:2,]
groupes.cah[c(1,4),]
?plot
source("td3.R")
rect.hclust()
.rect.hclust()
?rect.hclust
source("td3.R"
)
)
source("td3.R")
source("td3.R")
source('td3.R')
source('td3.R')
source('td3.R')
source('td3.R')
source('td3.R')
?kmeans
install.packages("fpc")
acp  <- princomp(royau.x,cor=T,scores=T)
acp<-princomp(royau.x,cor=T,scores=T)
royau.x
royau.cr
groupes.kmeans <- kmeans(royau.cr ,centers=4,nstart =5)
groupes.kmeans <- kmeans(royau.cr ,centers=4,nstart =5)
kmeans(royau.cr ,centers=4,nstart =5)
kmeans(royau.cr,centers=4,nstart=5)
kmeans(royau.cr,centers=4,nstart=5)
groupes.kmeans <- kmeans(royau.cr ,centers=4,nstart =5)
royau.x<-na.omit(royau.x)
royau.cr<-scale(royau.x)
groupes.kmeans <- kmeans(royau.cr ,centers=4,nstart =5)
groupes.kmeans
print(table(groupes.cah ,groupes.kmeans$cluster))
groupes.cah <- cutree(cah.ward ,k=4)
print(table(groupes.cah ,groupes.kmeans$cluster))
groupes.cah
groupes.kmeans$cluster
length(groupes.cah)
length(groupes.kmeans$cluster)
d.royau <- dist(royau.cr)
cah.ward <- hclust(d.royau ,method ="ward.D2")
groupes.cah <- cutree(cah.ward ,k=4)
length(groupes.cah)
print(table(groupes.cah ,groupes.kmeans$cluster))
inertie.expl  <- rep(0,times =10)
inertie.expl
for (k in  2:10){
clus  <- kmeans(royau.cr,centers=k,nstart =5)
print("clus")
print(clus)
inertie.expl[k] <- clus$betweenss/clus$totss
}
inertie.expl
plot (1:10 , inertie.expl ,type="b",xlab="Nb. de  groupes",ylab ="%inertie  expliquee ")
for (k in  2:10){
clus  <- kmeans.runs(royau.cr,centers=k,nstart =5)
print("clus")
print(clus)
inertie.expl[k] <- clus$betweenss/clus$totss
}
for (k in  2:10){
clus  <- kmeansruns(royau.cr,centers=k,nstart =5)
print("clus")
print(clus)
inertie.expl[k] <- clus$betweenss/clus$totss
}
library(fpc)
for (k in  2:10){
clus  <- kmeansruns(royau.cr,centers=k,nstart =5)
print("clus")
print(clus)
inertie.expl[k] <- clus$betweenss/clus$totss
}
inertie.expl  <- rep(0,times =10)
for (k in  2:10){
clus  <- kmeansruns(royau.cr,centers=k,nstart =5)
inertie.expl[k] <- clus$betweenss/clus$totss
}
plot (1:10 , inertie.expl ,type="b",xlab="Nb. de  groupes",ylab ="%inertie  expliquee ")
royau.x
colnames(royau.x)
stat.cstat.comp  <- function(x,y){
    K <- length(unique(y))
    n <- length(x)
    m <- mean(x)
    TSS  <- sum((x-m)^2)
    nk <- table(y)
    mk <- tapply(x,y,mean)
    BSS  <- sum(nk * (mk - m)^2)
    result  <- c(mk ,100.0* BSS/TSS)
    names(result) <- c(paste ("G",1:K) ,"% epl .")
    return(result)
}
stat.comp  <- function(x,y){
    K <- length(unique(y))
    n <- length(x)
    m <- mean(x)
    TSS  <- sum((x-m)^2)
    nk <- table(y)
    mk <- tapply(x,y,mean)
    BSS  <- sum(nk * (mk - m)^2)
    result  <- c(mk ,100.0* BSS/TSS)
    names(result) <- c(paste ("G",1:K) ,"% epl .")
    return(result)
}
royau.x[0]
royau.x[1]
stat.comp(royau.x[1],royau.x[2])
stat.comp(royau.x)
q()
